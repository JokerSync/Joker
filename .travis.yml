language: cpp
branches:
  except:
  - "/^skipthisbranch$/"
env:
  global:
  - JOKER_RELEASE_PATH=$HOME
  - TESTS_RELEASE_PATH=$HOME
  # prepare a commit descriptor and the source branch to define the release name
  - COMMIT_DESCRIPTOR=$(git describe --tags)
  - BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
jobs:
  include:
  - env: UNCRUSTIFY
    os: osx
    install: brew install uncrustify
    before_script: echo N/A
    script: scripts/uncrustify.sh
  - env: DOXYGEN
    os: linux
    install: sudo apt-get update && sudo apt-get install doxygen
    before_script: echo N/A
    script: scripts/doxygen.sh
  - env:
    - QTVER=591
    - PROJECT=app/Joker/Joker.pro
    - FFMPEG_DEV_PATH=/home/travis/usr/local
    os: linux

  - env:
    - QTVER=551
    - PROJECT=app/Joker/Joker.pro
    os: osx
    script:
    - make
    - make quickdmg
    - du -sh *.app
    deploy:
      provider: releases
      draft: true # needs manual publishing
      api_key:
        secure: cdrgrIUhFJmyQhNdGzSvvF9Zgqr+nfVE6xy1W86CiRkfNJLugVSYcs3kCu9V9rFTBvB/hp3YqcvnAc9TdxCE9nGclMEgBfkZwXj24n4wH2j1C+3bDDj/PG5BQiQnAhrFnYZDN1D6bXDE+NDbFN2smaIniaVVIwEos4Fx4MbsnSLr6u3iBzPCvjHMobDVkpYf7xY0DaMbWswRLMCHEQEfskS0mfsuqetWw81I4x+p1qhfdw6jDUmvttaYBo4xge1niyfH9K+/74QYhM4IWrM3SJr9T8zgt/9+pUhcpCY+J5yxFzp+qbMFJGG0AIy5A0qpiUllq+8wRLnoOmQRsEqUywKk2ue7UCJuYfQGTsXA15WBE5rFF0iBwoVttP6hNW61qLjlKyO0Xi8q/SrLdJolBWiI8wzPS7BPlOFCKjeMssh/jd5P4Ato8Tb/gyZSXxC1cD8xzXIL8Ldu9j/tEpm1fn8zoYB9Kqaw1eOObstXtAcT5GE6x1/0HI8dqAQ0iFC0q2zfZtx6+4qdUsdjK7gdTdT1OpSwyeCmf5vpwL17+FlVlSeS4IqElPKmSzHLYP3KM0yQCjBwd8oTOyS2fEZ4eCLsBjFY/yAZVz03R+Elsln8pcyk5ETvzcns1Mfi40p1JxWg2t5ZeOgXnZqBRQQ2K4+aZNpc7gpomaQiz5YgvJM=
      file_glob: true
      file: "Joker_*.dmg"
      skip_cleanup: true
      name: "Joker $COMMIT_DESCRIPTOR $BRANCH"
      on:
        all_branches: true # deploy from all branches since we have no other way to retrieve the build artefact (for now)

  - env:
    - QTVER=551
    - PROJECT=specs/AllSpecs/AllSpecs.pro
    os: osx
    before_install:
    - brew update
    - eval "$(pyenv init -)"
    - pyenv install 2.7.6
    - pyenv global 2.7.6
    - pyenv rehash
    - pip install cpp-coveralls
    - pyenv rehash
    script:
    - make
    # Output something every 10 minutes or Travis kills the job
    - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
    - ./AllSpecs --reporter=spec
    # Killing background sleep loop
    - kill %1
    after_success: coveralls -E .+/moc_.+ -E .+/ui_.+ -E .+\.app -E .+/tests/.+ -E
      .+/app/.+ -E .+/specs/.+
  - env:
    - QTVER=551
    - PROJECT=app/LTCTool/LTCTool.pro
    os: osx
  - env:
    - QTVER=551
    - PROJECT=app/MidiTool/MidiTool.pro
    os: osx
  - env:
    - QTVER=551
    - PROJECT=tests/tests.pro
    os: osx
addons:
  # apt packages for linux
  apt:
    sources:
      - sourceline: ppa:beineri/opt-qt591-trusty
    packages:
      - yasm # to build portaudio
      - libasound2-dev # to build rtmidi
      - qt59base
      - qt59xmlpatterns
      - libboost-all-dev
install:
- git submodule update --init --recursive
- ". scripts/install_qt.sh"
- scripts/install_ltc.sh
- scripts/install_ffmpeg.sh
- scripts/install_portaudio.sh
- scripts/install_rtmidi.sh
before_script: qmake $PROJECT
script: make