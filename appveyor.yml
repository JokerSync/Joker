environment:
  JOKER_RELEASE_PATH: .
  BOOST_PATH: C:\Libraries\boost
  FFMPEG_VERSION: 3.4.2

  matrix:
    # 64-bits MSVC build
    - QTDIR: C:\Qt\5.10.1\msvc2015_64
      FFMPEG_ARCH: win64

    # 32-bits Mingw build
    - QTDIR: C:\Qt\5.10.1\mingw53_32
      FFMPEG_ARCH: win32

install:
  - git submodule update --init --recursive
  # Installing various utilities
  - appveyor-retry choco install -y curl
  - appveyor-retry choco install -y innosetup
  - set PATH="C:\Program Files\7-Zip";"C:\Program Files (x86)\Inno Setup 5";%PATH%
  # Configuring Qt
  - '%QTDIR%\bin\qtenv2.bat'
  - qmake -v
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if %QTDIR:msvc=%==%QTDIR% g++ --version
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:msvc=%==%QTDIR% %make% --version
  - if not %QTDIR:msvc2013=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul
  - cd %APPVEYOR_BUILD_FOLDER% # go back to build folder - qtenv2 moved out of it
  # Installing ffmpeg dev
  - ps: wget https://ffmpeg.zeranoe.com/builds/$env:FFMPEG_ARCH/dev/ffmpeg-$env:FFMPEG_VERSION-$env:FFMPEG_ARCH-dev.zip -outfile ffmpeg_dev.zip
  - 7z x ffmpeg_dev.zip
  - set FFMPEG_DEV_PATH=%CD%\ffmpeg-%FFMPEG_VERSION%-%FFMPEG_ARCH%-dev
  # Installing ffmpeg shared
  - ps: wget https://ffmpeg.zeranoe.com/builds/$env:FFMPEG_ARCH/shared/ffmpeg-$env:FFMPEG_VERSION-$env:FFMPEG_ARCH-shared.zip -outfile ffmpeg_shared.zip
  - 7z x ffmpeg_shared.zip
  - set FFMPEG_SHARED_PATH=%CD%\ffmpeg-%FFMPEG_VERSION%-%FFMPEG_ARCH%-shared
  # Installing PortAudio
  - curl -kLO https://github.com/adfernandes/precompiled-portaudio-windows/raw/master/portaudio-r1891-build.zip
  - 7z x portaudio-r1891-build.zip
  - set PORTAUDIO_PATH=%CD%\portaudio-r1891-build
  # Installing libltc
  - curl -kLO https://github.com/x42/libltc/releases/download/v1.1.4/libltc-1.1.4.tar.gz
  - 7z x libltc-1.1.4.tar.gz
  - 7z x libltc-1.1.4.tar
  - set LTC_PATH=%CD%\libltc-1.1.4\src

  # prepare a commit descriptor and the source branch to define the release name
  - ps: $env:COMMIT_DESCRIPTOR = git describe --tags
  - ps: if(Test-Path env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH) { $env:BRANCH = $env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH } else { $env:BRANCH = $env:APPVEYOR_REPO_BRANCH }

build_script:
  - qmake app/Joker/Joker.pro
  - '%make%'
  - iscc app/Joker/Joker.iss /DPWD=%CD% /O%JOKER_RELEASE_PATH%
  - dir

artifacts:
  - path: Joker_*.exe
deploy:
  provider: GitHub
  auth_token:
    secure: Kg4Co6bJ5WJmeM0Gw33qbWylubqcGQga0kkGmVScP8XNzfxYUsLUAA4g5qO4Htjo
  artifact: /Joker_[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+_*\.exe/
  draft: true # needs manual publishing
  prerelease: false
  release: "Joker $(COMMIT_DESCRIPTOR) $(BRANCH)"
  on:
    branch: master # unlike Travis, it is possible to retrieve the build artefacts from AppVeyor web interface, so publishing from master only is fine
